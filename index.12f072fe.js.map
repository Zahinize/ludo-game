{"mappings":"CCAC,AAAA,WAEC,IAAI,EAAgB,GAEd,EAAe,SAAS,cAAc,CAAC,eACvC,EAAqB,SAAS,gBAAgB,CAAC,uBAC/C,EAAgB,SAAS,aAAa,CAAC,kBACvC,EAAqB,SAAS,aAAa,CAAC,oBAC5C,EAAuB,SAAS,aAAa,CAAC,mBAC9C,EAAY,SAAS,aAAa,CAAC,gBACnC,EAAY,SAAS,aAAa,CAAC,gBACnC,EAAiB,SAAS,aAAa,CAAC,oBACxC,EAAQ,SAAS,aAAa,CAAC,WAErC,SAAS,EAAqB,CAAC,EAC7B,IAAM,EAAK,EAAE,aAAa,CAEpB,EAAc,OAAO,CAAC,OAAO,EAAG,OAAO,CAAC,IAAO,EAErD,CAAA,EAAG,OAAO,CAAC,IAAO,CAAG,EACjB,GACF,EAAU,QAAQ,CAAG,CAAA,EACrB,EAAgB,EAAG,OAAO,CAAC,KAAQ,GAEnC,EAAU,QAAQ,CAAG,CAAA,EACrB,EAAgB,IAGlB,EAAmB,OAAO,CAAC,AAAC,IACtB,EAAY,OAAO,CAAC,KAAQ,GAAK,GACrC,CAAA,EAAY,OAAO,CAAC,IAAO,CAAG,GAA9B,CACF,EACF,CAqCA,QAAQ,GAAG,CAAC,wBANV,EAAmB,OAAO,CAAC,AAAC,GAAO,EAAG,gBAAgB,CAAC,QAAS,EAAsB,CAAA,IACtF,EAAa,gBAAgB,CAAC,QA9BhC,WACE,EAAmB,SAAS,CAAC,GAAG,CAAC,UACjC,EAAc,SAAS,CAAC,MAAM,CAAC,UAC/B,EAAqB,SAAS,CAAC,MAAM,CAAC,UACtC,EAAU,QAAQ,CAAG,CAAA,EACrB,EAAgB,GAEhB,EAAmB,OAAO,CAAC,AAAC,GAAgB,EAAY,OAAO,CAAC,IAAO,CAAG,IAC5E,EAsBgE,CAAA,GAC9D,EAAU,gBAAgB,CAAC,QArB7B,WACE,EAAU,QAAQ,CAAG,CAAA,EACrB,EAAgB,GAEhB,EAAmB,OAAO,CAAC,AAAC,GAAgB,EAAY,OAAO,CAAC,IAAO,CAAG,KAC1E,EAAmB,SAAS,CAAC,MAAM,CAAC,UACpC,EAAc,SAAS,CAAC,GAAG,CAAC,UAC5B,EAAqB,SAAS,CAAC,GAAG,CAAC,SACrC,EAa0D,CAAA,GACxD,EAAU,gBAAgB,CAAC,QAZ7B,WACE,GAAI,CAAC,EAAiB,MAAO,CAAA,EAE7B,EAAe,SAAS,CAAC,GAAG,CAAC,UAC7B,EAAM,SAAS,CAAC,MAAM,CAAC,SAEzB,EAM0D,CAAA,EAK5D","sources":["<anon>","src/app.js"],"sourcesContent":["var $e73bf42412feb220$exports = {};\n(function() {\n    /** Set Global variables and cache DOM element refs **/ let selectedColor = \"\";\n    let hasGameStarted = false;\n    const vsComputerEl = document.getElementById(\"vs-computer\");\n    const colorSelectionList = document.querySelectorAll(\".js-color-selection\");\n    const csContainerEl = document.querySelector(\".js-cs-wrapper\");\n    const heroBtnContainerEl = document.querySelector(\".js-hero-buttons\");\n    const ctaButtonContainerEl = document.querySelector(\".js-cta-buttons\");\n    const backBtnEl = document.querySelector(\".js-back-btn\");\n    const playBtnEl = document.querySelector(\".js-play-btn\");\n    const splashScreenEl = document.querySelector(\".js-splashScreen\");\n    const appEl = document.querySelector(\".js-app\");\n    function handleSelectionClick(e) {\n        const el = e.currentTarget;\n        // Toggle checkbox flag\n        const toggledFlag = Number(!Number(el.dataset[\"flag\"]));\n        el.dataset[\"flag\"] = toggledFlag;\n        if (toggledFlag) {\n            playBtnEl.disabled = false;\n            selectedColor = el.dataset[\"color\"];\n        } else {\n            playBtnEl.disabled = true;\n            selectedColor = \"\";\n        }\n        // Reset flags of other color selection nodes\n        colorSelectionList.forEach((selectionEl)=>{\n            if (selectionEl.dataset[\"color\"] === selectedColor) return;\n            selectionEl.dataset[\"flag\"] = \"0\";\n        });\n    }\n    function handleVSComputerClick() {\n        heroBtnContainerEl.classList.add(\"d-none\");\n        csContainerEl.classList.remove(\"d-none\");\n        ctaButtonContainerEl.classList.remove(\"d-none\");\n        playBtnEl.disabled = true;\n        selectedColor = \"\";\n        // Reset all color selection nodes\n        colorSelectionList.forEach((selectionEl)=>selectionEl.dataset[\"flag\"] = \"0\");\n    }\n    function handleBackBtnClick() {\n        playBtnEl.disabled = true;\n        selectedColor = \"\";\n        // Reset all color selection nodes\n        colorSelectionList.forEach((selectionEl)=>selectionEl.dataset[\"flag\"] = \"0\");\n        heroBtnContainerEl.classList.remove(\"d-none\");\n        csContainerEl.classList.add(\"d-none\");\n        ctaButtonContainerEl.classList.add(\"d-none\");\n    }\n    function handlePlayBtnClick() {\n        if (!selectedColor) return false;\n        splashScreenEl.classList.add(\"d-none\");\n        appEl.classList.remove(\"d-none\");\n        hasGameStarted = true;\n    }\n    function setDOMEvents() {\n        colorSelectionList.forEach((el)=>el.addEventListener(\"click\", handleSelectionClick, false));\n        vsComputerEl.addEventListener(\"click\", handleVSComputerClick, false);\n        backBtnEl.addEventListener(\"click\", handleBackBtnClick, false);\n        playBtnEl.addEventListener(\"click\", handlePlayBtnClick, false);\n    }\n    console.log(\"Ludo game JS loaded.\");\n    setDOMEvents();\n})();\n\n\n//# sourceMappingURL=index.12f072fe.js.map\n","(function() {\n  /** Set Global variables and cache DOM element refs **/\n  let selectedColor = \"\";\n  let hasGameStarted = false;\n  const vsComputerEl = document.getElementById(\"vs-computer\");\n  const colorSelectionList = document.querySelectorAll(\".js-color-selection\");\n  const csContainerEl = document.querySelector(\".js-cs-wrapper\");\n  const heroBtnContainerEl = document.querySelector(\".js-hero-buttons\");\n  const ctaButtonContainerEl = document.querySelector(\".js-cta-buttons\");\n  const backBtnEl = document.querySelector(\".js-back-btn\");\n  const playBtnEl = document.querySelector(\".js-play-btn\");\n  const splashScreenEl = document.querySelector(\".js-splashScreen\");\n  const appEl = document.querySelector(\".js-app\");\n\n  function handleSelectionClick(e) {\n    const el = e.currentTarget;\n    // Toggle checkbox flag\n    const toggledFlag = Number(!Number(el.dataset[\"flag\"]));\n\n    el.dataset[\"flag\"] = toggledFlag;\n    if (toggledFlag) {\n      playBtnEl.disabled = false;\n      selectedColor = el.dataset[\"color\"];\n    } else {\n      playBtnEl.disabled = true;\n      selectedColor = \"\";\n    }\n    // Reset flags of other color selection nodes\n    colorSelectionList.forEach((selectionEl) => {\n      if (selectionEl.dataset[\"color\"] === selectedColor) { return; }\n      selectionEl.dataset[\"flag\"] = \"0\";\n    });\n  }\n\n  function handleVSComputerClick() {\n    heroBtnContainerEl.classList.add(\"d-none\");\n    csContainerEl.classList.remove(\"d-none\");\n    ctaButtonContainerEl.classList.remove(\"d-none\");\n    playBtnEl.disabled = true;\n    selectedColor = \"\";\n    // Reset all color selection nodes\n    colorSelectionList.forEach((selectionEl) => selectionEl.dataset[\"flag\"] = \"0\");\n  }\n\n  function handleBackBtnClick() {\n    playBtnEl.disabled = true;\n    selectedColor = \"\";\n    // Reset all color selection nodes\n    colorSelectionList.forEach((selectionEl) => selectionEl.dataset[\"flag\"] = \"0\");\n    heroBtnContainerEl.classList.remove(\"d-none\");\n    csContainerEl.classList.add(\"d-none\");\n    ctaButtonContainerEl.classList.add(\"d-none\");\n  }\n\n  function handlePlayBtnClick() {\n    if (!selectedColor) { return false; }\n\n    splashScreenEl.classList.add(\"d-none\");\n    appEl.classList.remove(\"d-none\");\n    hasGameStarted = true;\n  }\n\n  function setDOMEvents() {\n    colorSelectionList.forEach((el) => el.addEventListener(\"click\", handleSelectionClick, false));\n    vsComputerEl.addEventListener(\"click\", handleVSComputerClick, false);\n    backBtnEl.addEventListener(\"click\", handleBackBtnClick, false);\n    playBtnEl.addEventListener(\"click\", handlePlayBtnClick, false);\n  }\n\n  console.log(\"Ludo game JS loaded.\");\n  setDOMEvents();\n})();\n"],"names":["selectedColor","vsComputerEl","document","getElementById","colorSelectionList","querySelectorAll","csContainerEl","querySelector","heroBtnContainerEl","ctaButtonContainerEl","backBtnEl","playBtnEl","splashScreenEl","appEl","handleSelectionClick","e","el","currentTarget","toggledFlag","Number","dataset","disabled","forEach","selectionEl","console","log","addEventListener","classList","add","remove"],"version":3,"file":"index.12f072fe.js.map"}