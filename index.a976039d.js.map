{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,W,C,I,I,E,I,A,G,E,E,W,C,E,a,C,C,GCEA,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,GCVA,AAAA,EAAA,SAAA,QAAA,CAA8C,IAAA,IAAoB,GAAA,YAAA,GAAA,EAAI,QAAQ,GAAG,KAAK,KAAK,CAAC,uN,I,E,C,EEA5F,EAAiB,IAAA,IAAoB,gDAAA,YAAA,GAAA,EAAiD,QAAQ,G,I,E,C,ECA9F,EAAiB,IAAA,IAAoB,iDAAA,YAAA,GAAA,EAAkD,QAAQ,G,I,E,C,ECA/F,EAAiB,IAAA,IAAoB,2CAAA,YAAA,GAAA,EAA4C,QAAQ,GHAxF,AAAA,WAEC,IAAI,EAAgB,GAChB,EAAgB,GAEhB,EAAkB,CAAA,EAKhB,EAAgB,CAJH,OACD,MACE,QACC,SACmD,CAClE,EAAe,SAAS,cAAc,CAAC,eACvC,EAAqB,SAAS,gBAAgB,CAAC,uBAC/C,EAAgB,SAAS,aAAa,CAAC,kBACvC,EAAqB,SAAS,aAAa,CAAC,oBAC5C,EAAuB,SAAS,aAAa,CAAC,mBAC9C,EAAY,SAAS,aAAa,CAAC,gBACnC,EAAe,SAAS,aAAa,CAAC,oBACtC,EAAY,SAAS,aAAa,CAAC,gBACnC,EAAiB,SAAS,aAAa,CAAC,oBACxC,EAAQ,SAAS,aAAa,CAAC,WAC/B,EAAmB,SAAS,aAAa,CAAC,oBAC1C,EAAN,IAAA,IAAA,GACM,EAAN,IAAA,IAAA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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-ac10293c63a7467a.js","src/app.js","node_modules/@parcel/runtime-js/lib/runtime-696242090bb24c48.js","node_modules/@parcel/runtime-js/lib/runtime-6cb7446f75c18535.js","node_modules/@parcel/runtime-js/lib/runtime-8d6ce26945efc8e3.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error('Could not resolve bundle with id ' + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $25413b9014cf1ed0$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse(\"[\\\"izUj7\\\",\\\"index.a976039d.js\\\",\\\"jZgrj\\\",\\\"icon-video-play.9a0d96f7.png\\\",\\\"3X2hC\\\",\\\"icon-video-pause.c7ce11b5.png\\\",\\\"ixd7m\\\",\\\"game-music.50c8af78.mp3\\\"]\"));\n\nvar $8cb1728fdca09ce8$exports = {};\n$8cb1728fdca09ce8$exports = new URL(\"icon-video-play.9a0d96f7.png\", import.meta.url).toString();\n\n\nvar $7ae368777e9520f8$exports = {};\n$7ae368777e9520f8$exports = new URL(\"icon-video-pause.c7ce11b5.png\", import.meta.url).toString();\n\n\nvar $9eb1cbde262db9d8$exports = {};\n$9eb1cbde262db9d8$exports = new URL(\"game-music.50c8af78.mp3\", import.meta.url).toString();\n\n\n(function() {\n    /** Set Global variables and cache DOM element refs **/ let selectedColor = \"\";\n    let computerColor = \"\";\n    let hasGameStarted = false;\n    let isBgPlayStarted = false;\n    const BLUE_COLOR = \"blue\";\n    const RED_COLOR = \"red\";\n    const GREEN_COLOR = \"green\";\n    const YELLOW_COLOR = \"yellow\";\n    const colorSequence = [\n        BLUE_COLOR,\n        RED_COLOR,\n        GREEN_COLOR,\n        YELLOW_COLOR\n    ];\n    const vsComputerEl = document.getElementById(\"vs-computer\");\n    const colorSelectionList = document.querySelectorAll(\".js-color-selection\");\n    const csContainerEl = document.querySelector(\".js-cs-wrapper\");\n    const heroBtnContainerEl = document.querySelector(\".js-hero-buttons\");\n    const ctaButtonContainerEl = document.querySelector(\".js-cta-buttons\");\n    const backBtnEl = document.querySelector(\".js-back-btn\");\n    const appBackBtnEl = document.querySelector(\".js-app-back-btn\");\n    const playBtnEl = document.querySelector(\".js-play-btn\");\n    const splashScreenEl = document.querySelector(\".js-splashScreen\");\n    const appEl = document.querySelector(\".js-app\");\n    const backgroundPlayEl = document.querySelector(\".js-icon-bg-play\");\n    const bgPlayIconPath = new URL($8cb1728fdca09ce8$exports);\n    const bgPauseIconPath = new URL($7ae368777e9520f8$exports);\n    const gameMusicPath = new URL($9eb1cbde262db9d8$exports);\n    const interactionMusicPath = new URL(\"https://zahinize.github.io/tic-tac-toe/player-o-click.908137e5.mp3\");\n    const gameAudio = new Audio(gameMusicPath);\n    const interactionAudio = new Audio(interactionMusicPath);\n    function getRivalColors(color) {\n        if (color == \"\") return null;\n        color = color.toLowerCase();\n        const userColorIdx = colorSequence.indexOf(color);\n        // In our game, the computer will appear diagonally to the end user.\n        // Thus, we can get computer color index by adding 2 to the user color index.\n        let computerColorIdx = userColorIdx + 2 >= colorSequence.length ? userColorIdx - 2 : userColorIdx + 2;\n        return [\n            color,\n            colorSequence[computerColorIdx]\n        ];\n    }\n    function handleSelectionClick(e) {\n        const el = e.currentTarget;\n        // Toggle checkbox flag\n        const toggledFlag = Number(!Number(el.dataset[\"flag\"]));\n        el.dataset[\"flag\"] = toggledFlag;\n        if (toggledFlag) {\n            playBtnEl.disabled = false;\n            selectedColor = el.dataset[\"color\"];\n        } else {\n            playBtnEl.disabled = true;\n            selectedColor = \"\";\n        }\n        // Reset flags of other color selection nodes\n        colorSelectionList.forEach((selectionEl)=>{\n            if (selectionEl.dataset[\"color\"] === selectedColor) return;\n            selectionEl.dataset[\"flag\"] = \"0\";\n        });\n    }\n    function handleVSComputerClick() {\n        heroBtnContainerEl.classList.add(\"d-none\");\n        csContainerEl.classList.remove(\"d-none\");\n        ctaButtonContainerEl.classList.remove(\"d-none\");\n        playBtnEl.disabled = true;\n        selectedColor = \"\";\n        // Reset all color selection nodes\n        colorSelectionList.forEach((selectionEl)=>selectionEl.dataset[\"flag\"] = \"0\");\n    }\n    function handleBackBtnClick() {\n        playBtnEl.disabled = true;\n        selectedColor = \"\";\n        // Reset all color selection nodes\n        colorSelectionList.forEach((selectionEl)=>selectionEl.dataset[\"flag\"] = \"0\");\n        heroBtnContainerEl.classList.remove(\"d-none\");\n        csContainerEl.classList.add(\"d-none\");\n        ctaButtonContainerEl.classList.add(\"d-none\");\n    }\n    function handlePlayBtnClick() {\n        if (!selectedColor) return false;\n        initGamePlay();\n    }\n    function handleAppBackBtnClick() {\n        const isAppLogout = window.confirm(\"Do you wish to exit this game?\");\n        if (!isAppLogout) return false;\n        hasGameStarted = false;\n        appEl.classList.add(\"d-none\");\n        splashScreenEl.classList.remove(\"d-none\");\n        // Reset user onboarding\n        csContainerEl.classList.add(\"d-none\");\n        ctaButtonContainerEl.classList.add(\"d-none\");\n        heroBtnContainerEl.classList.remove(\"d-none\");\n        // Show all color tokens\n        document.querySelectorAll(\".js-token\").forEach((node)=>node.classList.remove(\"d-none\"));\n        playBtnEl.disabled = true;\n        selectedColor = \"\";\n        computerColor = \"\";\n        // Reset all color selection nodes\n        colorSelectionList.forEach((selectionEl)=>selectionEl.dataset[\"flag\"] = \"0\");\n    }\n    function handleBgPlayClick(e) {\n        const el = e.currentTarget;\n        const img = el.querySelector(\".icon-bg-play\");\n        isBgPlayStarted = !isBgPlayStarted;\n        if (!isBgPlayStarted) {\n            img.src = bgPlayIconPath;\n            pauseAudio(gameAudio);\n            return;\n        }\n        img.src = bgPauseIconPath;\n        playAudio(gameAudio, true);\n        console.log(\"background play click:\");\n    }\n    function handlePageInteractionClick() {\n        playAudio(interactionAudio);\n    }\n    function pauseAudio(audioRef) {\n        audioRef.pause();\n    }\n    function playAudio(audioRef, isLoop = false) {\n        audioRef.loop = isLoop;\n        audioRef.play().catch((err)=>{\n            console.log(\"Audio is not played \", err);\n        });\n    }\n    function setDOMEvents() {\n        document.addEventListener('click', handlePageInteractionClick);\n        colorSelectionList.forEach((el)=>el.addEventListener(\"click\", handleSelectionClick, false));\n        vsComputerEl.addEventListener(\"click\", handleVSComputerClick, false);\n        backBtnEl.addEventListener(\"click\", handleBackBtnClick, false);\n        appBackBtnEl.addEventListener(\"click\", handleAppBackBtnClick, false);\n        playBtnEl.addEventListener(\"click\", handlePlayBtnClick, false);\n        backgroundPlayEl.addEventListener(\"click\", handleBgPlayClick, false);\n    }\n    /*** Initialise Main Gameplay ***/ function hideUnusedColorTokens(colorsArr) {\n        if (!colorsArr.length) return false;\n        colorsArr.forEach((color)=>{\n            document.querySelector(`.js-token-${color}-1`).classList.add(\"d-none\");\n            document.querySelector(`.js-token-${color}-2`).classList.add(\"d-none\");\n            document.querySelector(`.js-token-${color}-3`).classList.add(\"d-none\");\n            document.querySelector(`.js-token-${color}-4`).classList.add(\"d-none\");\n        });\n    }\n    function initGamePlay() {\n        const rivalColorsArr = getRivalColors(selectedColor);\n        const unusedColorsArr = colorSequence.filter((item)=>rivalColorsArr.indexOf(item) === -1);\n        splashScreenEl.classList.add(\"d-none\");\n        appEl.classList.remove(\"d-none\");\n        hideUnusedColorTokens(unusedColorsArr);\n        hasGameStarted = true;\n        computerColor = rivalColorsArr[1];\n        console.log(\"user color: \", selectedColor);\n        console.log(\"computer color: \", computerColor);\n        console.log(\"unused colors: \", unusedColorsArr);\n    }\n    console.log(\"Ludo game JS loaded.\");\n    setDOMEvents();\n})();\n\n\n//# sourceMappingURL=index.a976039d.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"izUj7\\\",\\\"index.a976039d.js\\\",\\\"jZgrj\\\",\\\"icon-video-play.9a0d96f7.png\\\",\\\"3X2hC\\\",\\\"icon-video-pause.c7ce11b5.png\\\",\\\"ixd7m\\\",\\\"game-music.50c8af78.mp3\\\"]\"));","(function() {\n  /** Set Global variables and cache DOM element refs **/\n  let selectedColor = \"\";\n  let computerColor = \"\";\n  let hasGameStarted = false;\n  let isBgPlayStarted = false;\n  const BLUE_COLOR = \"blue\";\n  const RED_COLOR = \"red\";\n  const GREEN_COLOR = \"green\";\n  const YELLOW_COLOR = \"yellow\";\n  const colorSequence = [BLUE_COLOR, RED_COLOR, GREEN_COLOR, YELLOW_COLOR];\n  const vsComputerEl = document.getElementById(\"vs-computer\");\n  const colorSelectionList = document.querySelectorAll(\".js-color-selection\");\n  const csContainerEl = document.querySelector(\".js-cs-wrapper\");\n  const heroBtnContainerEl = document.querySelector(\".js-hero-buttons\");\n  const ctaButtonContainerEl = document.querySelector(\".js-cta-buttons\");\n  const backBtnEl = document.querySelector(\".js-back-btn\");\n  const appBackBtnEl = document.querySelector(\".js-app-back-btn\");\n  const playBtnEl = document.querySelector(\".js-play-btn\");\n  const splashScreenEl = document.querySelector(\".js-splashScreen\");\n  const appEl = document.querySelector(\".js-app\");\n  const backgroundPlayEl = document.querySelector(\".js-icon-bg-play\");\n  const bgPlayIconPath = new URL(\"assets/icon-video-play.png\", import.meta.url);\n  const bgPauseIconPath = new URL(\"assets/icon-video-pause.png\", import.meta.url);\n  const gameMusicPath = new URL('assets/game-music.mp3', import.meta.url);\n  const interactionMusicPath = new URL(\"https://zahinize.github.io/tic-tac-toe/player-o-click.908137e5.mp3\");\n  const gameAudio = new Audio(gameMusicPath);\n  const interactionAudio = new Audio(interactionMusicPath);\n\n  function getRivalColors(color) {\n    if (color == \"\") return null;\n    color = color.toLowerCase();\n\n    const userColorIdx = colorSequence.indexOf(color);\n    // In our game, the computer will appear diagonally to the end user.\n    // Thus, we can get computer color index by adding 2 to the user color index.\n    let computerColorIdx = (userColorIdx + 2) >= colorSequence.length ? userColorIdx - 2 : userColorIdx + 2;\n\n    return [color, colorSequence[computerColorIdx]];\n  }\n  function handleSelectionClick(e) {\n    const el = e.currentTarget;\n    // Toggle checkbox flag\n    const toggledFlag = Number(!Number(el.dataset[\"flag\"]));\n\n    el.dataset[\"flag\"] = toggledFlag;\n    if (toggledFlag) {\n      playBtnEl.disabled = false;\n      selectedColor = el.dataset[\"color\"];\n    } else {\n      playBtnEl.disabled = true;\n      selectedColor = \"\";\n    }\n    // Reset flags of other color selection nodes\n    colorSelectionList.forEach((selectionEl) => {\n      if (selectionEl.dataset[\"color\"] === selectedColor) { return; }\n      selectionEl.dataset[\"flag\"] = \"0\";\n    });\n  }\n  function handleVSComputerClick() {\n    heroBtnContainerEl.classList.add(\"d-none\");\n    csContainerEl.classList.remove(\"d-none\");\n    ctaButtonContainerEl.classList.remove(\"d-none\");\n    playBtnEl.disabled = true;\n    selectedColor = \"\";\n    // Reset all color selection nodes\n    colorSelectionList.forEach((selectionEl) => selectionEl.dataset[\"flag\"] = \"0\");\n  }\n  function handleBackBtnClick() {\n    playBtnEl.disabled = true;\n    selectedColor = \"\";\n    // Reset all color selection nodes\n    colorSelectionList.forEach((selectionEl) => selectionEl.dataset[\"flag\"] = \"0\");\n    heroBtnContainerEl.classList.remove(\"d-none\");\n    csContainerEl.classList.add(\"d-none\");\n    ctaButtonContainerEl.classList.add(\"d-none\");\n  }\n  function handlePlayBtnClick() {\n    if (!selectedColor) { return false; }\n\n    initGamePlay();\n  }\n  function handleAppBackBtnClick() {\n    const isAppLogout = window.confirm(\"Do you wish to exit this game?\");\n\n    if (!isAppLogout) {\n      return false;\n    }\n\n    hasGameStarted = false;\n    appEl.classList.add(\"d-none\");\n    splashScreenEl.classList.remove(\"d-none\");\n    // Reset user onboarding\n    csContainerEl.classList.add(\"d-none\");\n    ctaButtonContainerEl.classList.add(\"d-none\");\n    heroBtnContainerEl.classList.remove(\"d-none\");\n    // Show all color tokens\n    document.querySelectorAll(\".js-token\").forEach(node => node.classList.remove(\"d-none\"));\n    playBtnEl.disabled = true;\n    selectedColor = \"\";\n    computerColor = \"\";\n    // Reset all color selection nodes\n    colorSelectionList.forEach((selectionEl) => selectionEl.dataset[\"flag\"] = \"0\");\n  }\n  function handleBgPlayClick(e) {\n    const el = e.currentTarget;\n    const img = el.querySelector(\".icon-bg-play\");\n\n    isBgPlayStarted = !isBgPlayStarted;\n    if (!isBgPlayStarted) {\n      img.src = bgPlayIconPath;\n      pauseAudio(gameAudio);\n      return;\n    }\n\n    img.src = bgPauseIconPath;\n    playAudio(gameAudio, true);\n    console.log(\"background play click:\");\n  }\n  function handlePageInteractionClick() {\n    playAudio(interactionAudio);\n  }\n  function pauseAudio(audioRef) {\n    audioRef.pause();\n  }\n  function playAudio(audioRef, isLoop = false) {\n    audioRef.loop = isLoop;\n\n    audioRef\n    .play()\n    .catch((err) => {\n      console.log(\"Audio is not played \", err);\n    });\n  }\n  function setDOMEvents() {\n    document.addEventListener('click', handlePageInteractionClick);\n    colorSelectionList.forEach((el) => el.addEventListener(\"click\", handleSelectionClick, false));\n    vsComputerEl.addEventListener(\"click\", handleVSComputerClick, false);\n    backBtnEl.addEventListener(\"click\", handleBackBtnClick, false);\n    appBackBtnEl.addEventListener(\"click\", handleAppBackBtnClick, false);\n    playBtnEl.addEventListener(\"click\", handlePlayBtnClick, false);\n    backgroundPlayEl.addEventListener(\"click\", handleBgPlayClick, false);\n  }\n\n  /*** Initialise Main Gameplay ***/\n  function hideUnusedColorTokens(colorsArr) {\n    if (!colorsArr.length) return false;\n\n    colorsArr.forEach(color => {\n      document.querySelector(`.js-token-${color}-1`).classList.add(\"d-none\");\n      document.querySelector(`.js-token-${color}-2`).classList.add(\"d-none\");\n      document.querySelector(`.js-token-${color}-3`).classList.add(\"d-none\");\n      document.querySelector(`.js-token-${color}-4`).classList.add(\"d-none\");\n    });\n  }\n  function initGamePlay() {\n    const rivalColorsArr = getRivalColors(selectedColor);\n    const unusedColorsArr = colorSequence.filter(item => rivalColorsArr.indexOf(item) === -1);\n\n    splashScreenEl.classList.add(\"d-none\");\n    appEl.classList.remove(\"d-none\");\n    hideUnusedColorTokens(unusedColorsArr);\n    hasGameStarted = true;\n    computerColor = rivalColorsArr[1];\n\n    console.log(\"user color: \", selectedColor);\n    console.log(\"computer color: \", computerColor);\n    console.log(\"unused colors: \", unusedColorsArr);\n  }\n\n  console.log(\"Ludo game JS loaded.\");\n  setDOMEvents();\n})();\n","module.exports = new __parcel__URL__(\"icon-video-play.9a0d96f7.png\").toString();","module.exports = new __parcel__URL__(\"icon-video-pause.c7ce11b5.png\").toString();","module.exports = new __parcel__URL__(\"game-music.50c8af78.mp3\").toString();"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$8cb1728fdca09ce8$exports","$7ae368777e9520f8$exports","$9eb1cbde262db9d8$exports","selectedColor","computerColor","isBgPlayStarted","colorSequence","vsComputerEl","document","getElementById","colorSelectionList","querySelectorAll","csContainerEl","querySelector","heroBtnContainerEl","ctaButtonContainerEl","backBtnEl","appBackBtnEl","playBtnEl","splashScreenEl","appEl","backgroundPlayEl","bgPlayIconPath","bgPauseIconPath","gameMusicPath","interactionMusicPath","gameAudio","Audio","interactionAudio","handleSelectionClick","e","el","currentTarget","toggledFlag","Number","dataset","disabled","forEach","selectionEl","playAudio","audioRef","isLoop","loop","play","catch","console","log","addEventListener","classList","add","remove","window","confirm","node","initGamePlay","colorsArr","rivalColorsArr","getRivalColors","color","toLowerCase","userColorIdx","indexOf","computerColorIdx","unusedColorsArr","filter","item","img","src","pauseAudio","pause"],"version":3,"file":"index.a976039d.js.map"}